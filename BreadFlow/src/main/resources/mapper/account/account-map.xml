<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.breadflow.app.account.mapper.AccountMapper">
	<!-- 전체조회 -->
	<select id="selectAccountList" resultType="AccountVO">
		SELECT 	m.position
        		,m.id
				,m.member_no
		        ,c.brn
		        ,m.name
		        ,c.company_name
		        ,m.tel
		        ,m.company_no
		        ,c.company_address
		        ,m.contract_date
		        ,c.region
		        ,m.other
		        
		FROM member m JOIN company c
		        ON m.company_no = c.company_no
	</select>

	<insert id="insertCompany" parameterType="AccountVO">
	<selectKey resultType="string" keyProperty="companyNo" order="BEFORE">
		SELECT 'CP' || LPAD(SUBSTR(MAX(company_no), 3) +1, 5, '0') FROM company
	</selectKey>
	
		INSERT INTO company
		(
		    company_no
		    ,div
		    ,company_name
		    ,company_address
		    ,company_tel
		    ,brn
		    ,region
		) VALUES (
		    #{companyNo}
		    , #{div}
		    , #{companyName}
		    , #{companyAddress}
		    , #{companyTel}
		    , #{brn}
		    , #{region}
		)
	</insert>
	
	<insert id="insertMember" parameterType="AccountVO">
	
		INSERT INTO member (
		    member_no
		    ,id
		    ,password 
		    ,name
		    ,tel
		    ,other
		    ,position
		    ,company_no
		    ,contract_date
		) VALUES (
		    (SELECT 'US' || LPAD(NVL(SUBSTR(MAX(member_no), 3),0)+1, 5, '0') FROM member)
		    , (SELECT 'BB' || LPAD(NVL(SUBSTR(MAX(id), 3),0)+1, 5, '0') FROM member)
		    <choose>
		    	<when test="password != null">
		    	, #{password}
		    	</when>
		    	<otherwise>
		    	,'0000'
		    	</otherwise>
		    </choose>
		    , #{name}
		    , #{companyTel}
		    , #{other}
		    , #{position}
		    , #{companyNo}
		    , #{contractDate}
		)
	</insert>
	
	<!-- 비밀번호 초기화 -->
	<update id="updatePwMember" parameterType="String">
		UPDATE 	member
		SET 	password = '0000'
		WHERE 	id = #{id}
	</update>
	
	<!-- member_no 기준으로 사원 단건 삭제 -->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM member
		WHERE member_no = #{no}
	</delete>
	
	<!-- 회사코드 기준으로 모든 사원 및 담당자 삭제 -->
	<delete id="deleteMembersWhereCompany" parameterType="String">
		DELETE FROM member
		WHERE company_no = #{companyNo}
	</delete>
	
	<!-- 업체 삭제 -->
	<delete id="deleteCompany" parameterType="String">
		DELETE FROM company
		WHERE company_no = #{companyNo}
	</delete>
	
	<!-- 회원 수정 -->
	<update id="updateEmpMember" parameterType="AccountVO">
		UPDATE 	member
		SET		name = #{name}
				,tel = #{companyTel}
				,other = #{other}
		WHERE	member_no = #{companyNo}
	</update>
	
	<update id="updateCompanyTel" parameterType="AccountVO">
		UPDATE 	company
		SET		company_tel = #{companyTel}
		WHERE	company_no = #{memberNo}
	</update>
	
	<!-- 아이디 체크 -->
	<select id="checkIdPw" parameterType="AccountVO">
		SELECT id, name, FIND_CD(position)
		FROM member
		WHERE id = #{id}
		  AND password = #{password}
	</select>

</mapper>