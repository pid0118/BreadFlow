<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.breadflow.app.orders.mapper.OrdersMapper">
	<select id="selectOrdersList">
		SELECT DISTINCT o.ordering_code
		       , o.ordering_date
		       , o.delivery_desire_date
		       , (SELECT company_name
		         FROM company
		         WHERE company_no = o.company_no) company_name
		       , o.total_price
		FROM ordering o JOIN ordering_detail od 
        ON o.ordering_code = od.ordering_code
		WHERE approval_whether = 'd1'
		AND situation_code = 'e1'
	</select>
	
	<select id="selectOrdersDetailList">
		SELECT od.ordering_detail_code
		       , NVL(p.product_name, i.ingredient_name) item_name
		       , NVL(p.amount || FIND_CD(p.unit), i.amount || FIND_CD(i.unit)) unit
		       , NVL(p.standard, i.standard) standard
		       , od.quantity
		FROM ordering o LEFT JOIN ordering_detail od 
		ON o.ordering_code = od.ordering_code 
		LEFT JOIN product p 
		ON od.ordering_product = p.product_code
		LEFT JOIN ingredient i
		ON od.ordering_ingredient = i.ingredient_code
		WHERE o.ordering_code = #{code}
	</select>
	
	<select id="selectOrdersRequestList">
		SELECT NVL(p.product_name, i.ingredient_name) item_name
			   , NVL(p.product_code, i.ingredient_code) item_code
		       , NVL(p.amount || FIND_CD(p.unit), i.amount || FIND_CD(i.unit)) unit
		       , NVL(p.standard, i.standard) standard
		       , od.quantity
		       , NVL((SELECT PURCHASE_PRICE
		              FROM product
		              WHERE product_code = p.product_code) * od.quantity,
		             (SELECT PURCHASE_PRICE
		              FROM ingredient
		              WHERE ingredient_code = i.ingredient_code) * od.quantity) price
		       , (SELECT company_name
		          FROM company
		          WHERE company_no = o.company_no) in_company
		       , o.company_no in_company_no
		       , od.ordering_detail_code
		FROM ordering o LEFT JOIN ordering_detail od 
		ON o.ordering_code = od.ordering_code 
		LEFT JOIN product p 
		ON od.ordering_product = p.product_code
		LEFT JOIN ingredient i
		ON od.ordering_ingredient = i.ingredient_code
		WHERE o.ordering_code IN (
		<foreach collection="array" item="item" separator=",">
			#{item}
		</foreach>
		)
		ORDER BY item_name, in_company
	</select>
	
	<select id="selectOrdersNo">
		SELECT 'OR' || GETSEQ('orders', 'orders_no')
        FROM dual
	</select>
	
	<insert id="insertOrders">
		INSERT INTO orders (orders_no, manager)
		VALUES (#{no}, #{manager})
	</insert>
	
	<update id="insertOrdersDetail">
		<selectKey keyProperty="detailNo" resultType="string" order="BEFORE">
			SELECT 'OR' || GETSEQ('orders_detail', 'orders_detail_no')
        	FROM dual
		</selectKey>
		CALL ordersrequest_prod (#{no}
								, #{detailNo}
								, #{responseVO.itemCode}
								, #{responseVO.quantity}
								, #{responseVO.price}
								, #{responseVO.inCompanyNo}
								, #{responseVO.outCompanyNo}
								, #{responseVO.orderingDetailCode})
	</update>
	
	<select id="selectOrdersComList">
		SELECT b.* 
		FROM (SELECT rownum rn, a.* 
		      FROM (SELECT DISTINCT o.orders_no
		                            , o.orders_date
		                            , o.manager
		                            , (SELECT company_name 
		                               FROM company 
		                               WHERE company_no = od.instore_company) in_company 
		            FROM orders o JOIN orders_detail od 
		            ON o.orders_no = od.orders_no 
		            JOIN ordering_detail ord 
		            ON ord.ordering_detail_code = od.ordering_detail_code 
		            WHERE ord.situation_code != 'e1'
		            <if test="comNo != ''">
				    AND od.outstore_company = #{comNo}
				    </if>
		            ORDER BY 
		            <choose>
						<when test="sort == 'odDesc'">
							orders_date DESC
						</when>
						<when test="sort == 'odAsc'">
							orders_date ASC
						</when>
					</choose>) a
		      ) b 
		WHERE b.rn BETWEEN (#{page}-1) * 10 + 1 AND (#{page}-1) * 10 + 10
	</select>
	
	<select id="selectOrdersComListPage">
		SELECT count(b.rn) 
		FROM (SELECT rownum rn, a.* 
		      FROM (SELECT DISTINCT o.orders_no
		                            , o.orders_date
		                            , o.manager
		                            , (SELECT company_name 
		                               FROM company 
		                               WHERE company_no = od.instore_company) in_company 
		            FROM orders o JOIN orders_detail od 
		            ON o.orders_no = od.orders_no 
		            JOIN ordering_detail ord 
		            ON ord.ordering_detail_code = od.ordering_detail_code 
		            WHERE ord.situation_code != 'e1'
		            <if test="comNo != ''">
				    AND od.outstore_company = #{comNo}
				    </if>
		            ORDER BY
		            <choose>
						<when test="sort == 'odDesc'">
							orders_date DESC
						</when>
						<when test="sort == 'odAsc'">
							orders_date ASC
						</when>
					</choose>) a
		) b
	</select>
	
	<select id="selectOrdersComDList">
		SELECT  DISTINCT od.orders_detail_no,
                NVL((SELECT ingredient_name
                     FROM ingredient
                     WHERE ingredient_code = od.orders_item),
                    (SELECT product_name
                     FROM product
                     WHERE product_code = od.orders_item)) item_name,
                NVL((SELECT amount || FIND_CD(unit)
                     FROM ingredient
                     WHERE ingredient_code = od.orders_item),
                    (SELECT amount || FIND_CD(unit)
                     FROM product
                     WHERE product_code = od.orders_item)) unit,
                NVL((SELECT standard
                     FROM ingredient
                     WHERE ingredient_code = od.orders_item),
                    (SELECT standard
                     FROM product
                     WHERE product_code = od.orders_item)) standard,
                (SELECT company_name
                 FROM company
                 WHERE company_no = od.outstore_company) out_company,
                od.quantity,
                FIND_CD(ord.situation_code) situation
	    FROM orders o JOIN orders_detail od
	    ON o.orders_no = od.orders_no
	    JOIN ordering_detail ord
	    ON ord.ordering_detail_code = od.ordering_detail_code
	    WHERE ord.situation_code != 'e1'
        AND o.orders_no = #{no}
        ORDER BY od.orders_detail_no
	</select>

</mapper>